<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Welcome to Nooblogaurus on Nooblogaurus</title>
    <link>https://nooblogaurus.com/</link>
    <description>Recent content in Welcome to Nooblogaurus on Nooblogaurus</description>
    <generator>Hugo -- 0.140.0</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 Dec 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://nooblogaurus.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MITM Attacks</title>
      <link>https://nooblogaurus.com/articles/mitm_crash_a_party/</link>
      <pubDate>Tue, 17 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://nooblogaurus.com/articles/mitm_crash_a_party/</guid>
      <description>&lt;h1 id=&#34;mitm-attacks-how-to-crash-the-party-between-alice-and-bob&#34;&gt;MITM Attacks: How to Crash the Party Between Alice and Bob&lt;/h1&gt;
&lt;p&gt;Man-in-the-Middle attacks (MITM) are like showing up uninvited to someone else’s private conversation, grabbing a chair, and whispering, &lt;em&gt;“Don’t mind me.”&lt;/em&gt; Except, instead of tea and gossip, the stakes are passwords, credit card numbers, and the little details your digital life holds. Carol (the uninvited hacker) isn’t just listening, she’s reading, stealing, and sometimes &lt;em&gt;tweaking&lt;/em&gt; what’s being said.&lt;/p&gt;
&lt;p&gt;Today, we’ll crash this party and take a look at how Carol pulls off her tricks, why they work, and what you can do to stop her from making herself at home in your traffic.&lt;/p&gt;</description>
    </item>
    <item>
      <title>InspecTor</title>
      <link>https://nooblogaurus.com/tools/inspector/</link>
      <pubDate>Mon, 16 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://nooblogaurus.com/tools/inspector/</guid>
      <description>&lt;h2 id=&#34;inspector-a-streamlined-tool-for-website-metadata-extraction&#34;&gt;InspecTor: A Streamlined Tool for Website Metadata Extraction&lt;/h2&gt;
&lt;p&gt;Pulling metadata from websites was once a straightforward task. You could hit a few URLs, scrape the required data, and move on. However, with the rise of dynamic content, Tor-hidden services (.onion domains), and increasing anonymity concerns, the process became far more complex. InspecTor is a command-line tool I developed to address these challenges. It simplifies metadata extraction from websites, including Tor services, while preserving user anonymity.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Osintagram</title>
      <link>https://nooblogaurus.com/tools/osintagram/</link>
      <pubDate>Mon, 16 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://nooblogaurus.com/tools/osintagram/</guid>
      <description>&lt;p&gt;Gathering OSINT (Open-Source Intelligence) from Instagram used to be straightforward—grab a GitHub tool, run it, and get results. Then Instagram’s API updates broke nearly everything, leaving most tools useless. That’s where &lt;strong&gt;Osintagram&lt;/strong&gt; comes in: a simple script I put together to finally get Instagram OSINT working again.&lt;/p&gt;
&lt;p&gt;I’m no developer, just someone frustrated by older tools failing in CTFs and OSINT exercises. Osintagram isn’t perfect, but it’s built to handle the updated systems Instagram uses today. Let me show you how it works and why it might save you some headaches.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ffuf</title>
      <link>https://nooblogaurus.com/cheat-sheets/ffuf/</link>
      <pubDate>Sun, 15 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://nooblogaurus.com/cheat-sheets/ffuf/</guid>
      <description>&lt;p&gt;&lt;strong&gt;FFUF&lt;/strong&gt; (Fuzz Faster U Fool) is a fast and flexible web fuzzer that helps penetration testers and security researchers discover directories, files, parameters, and more.&lt;/p&gt;
&lt;h2 id=&#34;basic-syntax&#34;&gt;Basic Syntax&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ffuf -c -w path/to/wordlist -u https://target_url/FUZZ
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Filter responses with a content size of 4242 bytes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ffuf -w /path/to/vhost/wordlist -u https://target_url/ -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Host: FUZZ&amp;#34;&lt;/span&gt; -fs &lt;span style=&#34;color:#ae81ff&#34;&gt;4242&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Filter responses with a 401 status code&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ffuf -w /path/to/values.txt -u https://target_url/script.php?valid_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;FUZZ -fc &lt;span style=&#34;color:#ae81ff&#34;&gt;401&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Filter 401 responses and fuzz passwords in a POST request&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ffuf -w /path/to/postdata.txt -X POST -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username=admin\&amp;amp;password=FUZZ&amp;#34;&lt;/span&gt; -u https://target_url/login.php -fc &lt;span style=&#34;color:#ae81ff&#34;&gt;401&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;common-flags&#34;&gt;Common Flags&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-c&lt;/code&gt;&lt;/strong&gt;: Enable colorized output.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-maxtime&lt;/code&gt;&lt;/strong&gt;: Set the maximum runtime for the process in seconds.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-p&lt;/code&gt;&lt;/strong&gt;: Set a delay between requests (e.g., &lt;code&gt;0.1&lt;/code&gt; seconds).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-v&lt;/code&gt;&lt;/strong&gt;: Verbose output.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-t&lt;/code&gt;&lt;/strong&gt;: Number of threads (default is 40).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-mc&lt;/code&gt;&lt;/strong&gt;: Match specific HTTP status codes (e.g., &lt;code&gt;200&lt;/code&gt;, &lt;code&gt;301&lt;/code&gt;, &lt;code&gt;403&lt;/code&gt;, or &lt;code&gt;all&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-fc&lt;/code&gt;&lt;/strong&gt;: Filter out responses by HTTP status codes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-w&lt;/code&gt;&lt;/strong&gt;: Specify the wordlist path.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-u&lt;/code&gt;&lt;/strong&gt;: Define the target URL.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/strong&gt;: Enable silent mode.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-recursion&lt;/code&gt;&lt;/strong&gt;: Enable recursive fuzzing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-r&lt;/code&gt;&lt;/strong&gt;: Follow redirects.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-o&lt;/code&gt;&lt;/strong&gt;: Output results to a file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-of&lt;/code&gt;&lt;/strong&gt;: Specify output format (e.g., &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;csv&lt;/code&gt;, &lt;code&gt;all&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-b&lt;/code&gt;&lt;/strong&gt;: Include cookies in the request.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;examples-1&#34;&gt;Examples&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Match all responses, filter 42-byte answers, output colored and verbose&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ffuf -w wordlist.txt -u https://example.org/FUZZ -mc all -fs &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt; -c -v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Fuzz host headers and show only status 200 responses&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ffuf -w hosts.txt -u https://example.org/ -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Host: FUZZ&amp;#34;&lt;/span&gt; -mc &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Fuzz the `name` field in a POST request with JSON data, filter responses containing &amp;#34;error&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ffuf -w entries.txt -u https://example.org/ -X POST -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{&amp;#34;name&amp;#34;: &amp;#34;FUZZ&amp;#34;, &amp;#34;anotherkey&amp;#34;: &amp;#34;anothervalue&amp;#34;}&amp;#39;&lt;/span&gt; -fr &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Use two wordlists for parameter and value fuzzing, match responses containing &amp;#34;VAL&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ffuf -w params.txt:PARAM -w values.txt:VAL -u https://example.org/?PARAM&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;VAL -mr &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;VAL&amp;#34;&lt;/span&gt; -c
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tips-and-tricks&#34;&gt;Tips and Tricks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Interactive Mode&lt;/strong&gt;: Press &lt;code&gt;Enter&lt;/code&gt; while FFUF is running to access interactive features, such as reconfiguring filters or saving the state.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multiple Payloads&lt;/strong&gt;: Use the &lt;code&gt;FUZZ&lt;/code&gt; keyword multiple times in a URL (e.g., &lt;code&gt;https://example.org/path/FUZZ/another_path/FUZZ&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Variables in URLs&lt;/strong&gt;: Specify payload locations using variables (e.g., &lt;code&gt;https://example.org/path/{var1}/another_path/{var2}&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>FlaskOfCookies</title>
      <link>https://nooblogaurus.com/tools/flask_of_cookies/</link>
      <pubDate>Sun, 15 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://nooblogaurus.com/tools/flask_of_cookies/</guid>
      <description>&lt;p&gt;Flask web applications are clever beasts, storing session data client-side in cookies. It’s convenient for developers, but it can also be a security rabbit hole if you’re not careful. That’s why I put together &lt;strong&gt;FlaskOfCookies&lt;/strong&gt;, a tool to help you decode, encode, and (if necessary) brute-force Flask session cookies.&lt;/p&gt;
&lt;p&gt;To be clear, this isn’t entirely my invention. It started because I hit a wall on a &lt;strong&gt;Root-Me challenge&lt;/strong&gt;, I couldn’t get it done with &lt;strong&gt;noraj’s tool&lt;/strong&gt; (props to Alexandre Zanni for his great work). So, I decided to rework it, adding my own spin to tackle the issue. This tool is for anyone who’s curious about Flask’s session cookies, whether you’re debugging, testing, or just poking around.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hydra Cheat Sheet</title>
      <link>https://nooblogaurus.com/cheat-sheets/hydra/</link>
      <pubDate>Sun, 15 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://nooblogaurus.com/cheat-sheets/hydra/</guid>
      <description>&lt;h3 id=&#34;-hydra-cheat-sheet&#34;&gt;&lt;strong&gt;🛠️ Hydra Cheat Sheet&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;💡 Hydra&lt;/strong&gt; is a powerful password-cracking tool for brute-forcing authentication protocols. It supports various protocols and is highly customizable for complex scenarios.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-1-basic-syntax&#34;&gt;📌 &lt;strong&gt;1. Basic Syntax&lt;/strong&gt;&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hydra &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &amp;lt;IP/Target&amp;gt; &amp;lt;protocol&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Brute-force SSH login with a single username and password list:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hydra -l admin -P passwords.txt 192.168.1.10 ssh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Brute-force HTTP POST login form:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hydra -l admin -P passwords.txt 192.168.1.10 http-post-form &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/login:username=^USER^&amp;amp;password=^PASS^:F=Invalid login&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-2-common-flags&#34;&gt;📌 &lt;strong&gt;2. Common Flags&lt;/strong&gt;&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;strong&gt;Flag&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-h&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Display help menu.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-l &amp;lt;user&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Single username/login.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-L &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Wordlist for usernames.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-p &amp;lt;pass&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Single password.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-P &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Wordlist for passwords.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-s &amp;lt;port&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Specify target port.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-f&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Stop after finding valid credentials.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-R&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Restore previous session.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-t &amp;lt;num&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Number of parallel threads (default: 16).&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-V&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Verbose output (show each attempt).&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-I&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Ignore an existing restore file.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-u&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Loop usernames with each password attempt.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-w &amp;lt;sec&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Wait &lt;!-- raw HTML omitted --&gt; seconds between retries.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-o &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Write found credentials to a file.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-3-supported-protocols&#34;&gt;📌 &lt;strong&gt;3. Supported Protocols&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Hydra supports a wide range of protocols, including:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>nmap</title>
      <link>https://nooblogaurus.com/cheat-sheets/nmap/</link>
      <pubDate>Sun, 15 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://nooblogaurus.com/cheat-sheets/nmap/</guid>
      <description>&lt;h3 id=&#34;--nmap-cheat-sheet&#34;&gt;&lt;strong&gt;🛠️  Nmap Cheat Sheet&lt;/strong&gt;&lt;/h3&gt;
&lt;h4 id=&#34;-introduction&#34;&gt;🚀 &lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;This cheat sheet provides a quick reference for &lt;strong&gt;Nmap&lt;/strong&gt;, including syntax, common flags, output formats, and advanced scripts for &lt;strong&gt;SMB&lt;/strong&gt; and &lt;strong&gt;SSH&lt;/strong&gt; enumeration.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-1-basic-syntax&#34;&gt;📌 &lt;strong&gt;1. Basic Syntax&lt;/strong&gt;&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Standard scan&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nmap &amp;lt;target IP&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Stealth scan with verbose output and no ping&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nmap -sS -Pn -v 10.10.10.10
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Aggressive scan with version detection&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nmap -A -sS -Pn 10.10.10.10
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Full port scan with OS detection and vulnerability scripts&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nmap -sV -sT -O -p- -vv --script vulners 10.10.10.10
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;-2-common-flags&#34;&gt;📌 &lt;strong&gt;2. Common Flags&lt;/strong&gt;&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;strong&gt;Flag&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-p &amp;lt;PORT&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Scan specific port&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-p-&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Scan all ports (1-65535)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-sT&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;TCP Connect scan&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-sU&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;UDP scan&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-sV&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Detect services and versions&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-Pn&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Disable host discovery (no ping)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-sS&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;SYN &amp;ldquo;Stealth&amp;rdquo; scan&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-oA&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Output in all formats&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-sn&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Host discovery only (no port scan)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-A&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Enable OS detection and version scan&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;OS detection&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-v&lt;/code&gt;, &lt;code&gt;-vv&lt;/code&gt;, &lt;code&gt;-vvv&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Verbose output (levels)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;--script=vuln&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Run vulnerability detection scripts&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;--script=vulners&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Run detailed vulnerability checks&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;--script=http-enum&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Enumerate web server endpoints&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-3-output-formats&#34;&gt;📌 &lt;strong&gt;3. Output Formats&lt;/strong&gt;&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;strong&gt;Flag&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-oN&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Normal text output&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-oX&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;XML output&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-oG&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Greppable output&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-oA&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Output in all three formats&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>redflagger</title>
      <link>https://nooblogaurus.com/tools/redflagger/</link>
      <pubDate>Sun, 15 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://nooblogaurus.com/tools/redflagger/</guid>
      <description>&lt;p&gt;Daily domain reports are a treasure trove for cybersecurity analysts, but collecting and organizing them can quickly become tedious. That’s where &lt;strong&gt;RedFlagger&lt;/strong&gt; comes in. This lightweight Bash script automates the process of downloading and aggregating reports from &lt;a href=&#34;https://dl.red.flag.domains/daily/&#34;&gt;Red Flag Domains&lt;/a&gt;. It’s simple, efficient, and built to save time—whether you’re sifting through a few recent reports or analyzing a year’s worth of data.&lt;/p&gt;
&lt;h2 id=&#34;the-backstory&#34;&gt;The Backstory&lt;/h2&gt;
&lt;p&gt;This project started as a bit of a joke. My friend &lt;strong&gt;lil-doudou&lt;/strong&gt; had written an excellent Python tool called &lt;a href=&#34;https://github.com/lil-doudou/NewRedflag&#34;&gt;NewRedflag&lt;/a&gt; to handle domain report aggregation, but he’s also a massive Bash enthusiast. So, as a playful nod to his love for scripting, I decided to rewrite the functionality in Bash—simpler, lighter, and arguably more fun (depending on your feelings about shell scripts).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Webpage Infos Extractor</title>
      <link>https://nooblogaurus.com/tools/webpage_infos_extractor/</link>
      <pubDate>Sun, 15 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://nooblogaurus.com/tools/webpage_infos_extractor/</guid>
      <description>&lt;p&gt;When you need to quickly understand the structure of a webpage, a lightweight tool can save the day. &lt;strong&gt;Webpage Infos Extractor&lt;/strong&gt; is just that: a simple JavaScript bookmarklet that extracts useful information like forms, links, images, and word count from any webpage. No extensions or extra software required—just a single bookmark to get key insights instantly.&lt;/p&gt;
&lt;h2 id=&#34;why-build-this&#34;&gt;Why Build This?&lt;/h2&gt;
&lt;p&gt;Sometimes, the simplest tools are the most convenient. I needed a way to peek under the hood of webpages during quick tests or casual research without opening dev tools every time. So, I threw together this bookmarklet to make data analysis fast and portable. It’s not groundbreaking, but it gets the job done without any fuss.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Meterpreter</title>
      <link>https://nooblogaurus.com/cheat-sheets/meterpreter/</link>
      <pubDate>Sat, 14 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://nooblogaurus.com/cheat-sheets/meterpreter/</guid>
      <description>&lt;h2 id=&#34;basic-commands&#34;&gt;Basic Commands&lt;/h2&gt;
&lt;p&gt;Start with the essentials to get a lay of the land:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;help&lt;/code&gt;&lt;/strong&gt;: Display a list of available commands (your lifeline when you&amp;rsquo;re lost).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;sysinfo&lt;/code&gt;&lt;/strong&gt;: Get basic system information, including OS and hostname (think of it as a &amp;ldquo;who am I dealing with?&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;ps&lt;/code&gt;&lt;/strong&gt;: List running processes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;kill &amp;lt;PID&amp;gt;&lt;/code&gt;&lt;/strong&gt;: Terminate a process by its PID (because some processes just need to &amp;ldquo;go away&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;migrate &amp;lt;PID&amp;gt;&lt;/code&gt;&lt;/strong&gt;: Move Meterpreter to a different process to stay under the radar.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;rev2self&lt;/code&gt;&lt;/strong&gt;: Revert privileges to the original user (a &amp;ldquo;reset button&amp;rdquo; for when things get weird).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;file-system-commands&#34;&gt;File System Commands&lt;/h2&gt;
&lt;p&gt;For poking around the file system:&lt;/p&gt;</description>
    </item>
    <item>
      <title>smbclient</title>
      <link>https://nooblogaurus.com/cheat-sheets/smbclient/</link>
      <pubDate>Sat, 14 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://nooblogaurus.com/cheat-sheets/smbclient/</guid>
      <description>&lt;p&gt;&lt;strong&gt;smbclient&lt;/strong&gt; is a command-line tool that allows you to interact with SMB (Server Message Block) file shares. Whether you’re uploading files, listing directories, or troubleshooting network shares, this tool is your go-to for SMB.&lt;/p&gt;
&lt;h2 id=&#34;basic-usage&#34;&gt;Basic Usage&lt;/h2&gt;
&lt;p&gt;To connect to an SMB file share, use the following syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;smbclient //server/share &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;strong&gt;&lt;code&gt;server&lt;/code&gt;&lt;/strong&gt; with the hostname or IP address of the server hosting the file share.&lt;/li&gt;
&lt;li&gt;Replace &lt;strong&gt;&lt;code&gt;share&lt;/code&gt;&lt;/strong&gt; with the name of the file share.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once connected, you will be prompted for credentials. After successful authentication, a command prompt will allow you to interact with the share.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SMBMap</title>
      <link>https://nooblogaurus.com/cheat-sheets/smbmap/</link>
      <pubDate>Sat, 14 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://nooblogaurus.com/cheat-sheets/smbmap/</guid>
      <description>&lt;h2 id=&#34;basic-syntax&#34;&gt;Basic Syntax&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;smbmap -u &amp;lt;username&amp;gt; -p &amp;lt;password&amp;gt; -H &amp;lt;host&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;common-usage-examples&#34;&gt;Common Usage Examples&lt;/h2&gt;
&lt;h3 id=&#34;connect-with-null-password&#34;&gt;Connect with Null Password&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;smbmap -u guest -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; -d . -H 192.168.1.1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;connect-as-admin-with-password&#34;&gt;Connect as Admin with Password&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;smbmap -u admin -p password123 -d . -H 192.168.1.1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;execute-a-command&#34;&gt;Execute a Command&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;smbmap -u admin -p password123 -d . -H 192.168.1.1 -x &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ipconfig&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;connect-to-a-specific-drive&#34;&gt;Connect to a Specific Drive&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;smbmap -u admin -p password123 -d . -H 192.168.1.1 -r &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C$&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;upload-a-file&#34;&gt;Upload a File&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;smbmap -u admin -p password123 -d . -H 192.168.1.1 --upload &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/path/to/file.txt&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C$\file.txt&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;download-a-file&#34;&gt;Download a File&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;smbmap -u admin -p password123 -d . -H 192.168.1.1 --download &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C$\file.txt&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;enumerate-a-specific-share&#34;&gt;Enumerate a Specific Share&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;smbmap -H 192.168.1.1 -s &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;share_name&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;enumerate-users&#34;&gt;Enumerate Users&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;smbmap -H 192.168.1.1 --users
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;key-options&#34;&gt;Key Options&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-u &amp;lt;username&amp;gt;&lt;/code&gt;&lt;/strong&gt;: Specify the username.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-p &amp;lt;password&amp;gt;&lt;/code&gt;&lt;/strong&gt;: Specify the password.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-H &amp;lt;host&amp;gt;&lt;/code&gt;&lt;/strong&gt;: Specify the target host.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-r &amp;lt;share&amp;gt;&lt;/code&gt;&lt;/strong&gt;: Connect to a specific share or drive.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-x &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/strong&gt;: Execute a command on the target.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;--upload &amp;lt;local_file&amp;gt; &amp;lt;remote_path&amp;gt;&lt;/code&gt;&lt;/strong&gt;: Upload a file to the target.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;--download &amp;lt;remote_file&amp;gt;&lt;/code&gt;&lt;/strong&gt;: Download a file from the target.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-s &amp;lt;share&amp;gt;&lt;/code&gt;&lt;/strong&gt;: Enumerate a specific share.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;--users&lt;/code&gt;&lt;/strong&gt;: Enumerate users on the target.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-R&lt;/code&gt;&lt;/strong&gt;: Check for shares with full permissions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-p &amp;lt;port&amp;gt;&lt;/code&gt;&lt;/strong&gt;: Specify a port.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;when-to-use-smbmap&#34;&gt;When to Use SMBMap&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Permission Audits&lt;/strong&gt;: Quickly identify shares with read, write, or full access permissions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command Execution&lt;/strong&gt;: Execute remote commands on accessible shares.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;File Transfers&lt;/strong&gt;: Upload or download files directly from SMB shares.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;User Enumeration&lt;/strong&gt;: Discover user accounts configured on the target system.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Wordlister</title>
      <link>https://nooblogaurus.com/tools/wordlister/</link>
      <pubDate>Sat, 14 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://nooblogaurus.com/tools/wordlister/</guid>
      <description>&lt;p&gt;Sometimes you just need a clean wordlist without the frills of a complicated tool. That’s where this &lt;strong&gt;Wordlist Generator&lt;/strong&gt; comes in. It’s a simple Bash script designed to pull unique words from one or more text files, sort them, and save them neatly into a wordlist. Whether you’re prepping for a dictionary attack, building a natural language dataset, or just satisfying your curiosity, this script gets the job done quickly and efficiently.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
